// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Â MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Create as $Create} from "@wailsio/runtime";

/**
 * A WaitGroup waits for a collection of goroutines to finish.
 * The main goroutine calls [WaitGroup.Add] to set the number of
 * goroutines to wait for. Then each of the goroutines
 * runs and calls [WaitGroup.Done] when finished. At the same time,
 * [WaitGroup.Wait] can be used to block until all goroutines have finished.
 * 
 * A WaitGroup must not be copied after first use.
 * 
 * In the terminology of [the Go memory model], a call to [WaitGroup.Done]
 * “synchronizes before” the return of any Wait call that it unblocks.
 * 
 * [the Go memory model]: https://go.dev/ref/mem
 */
export class WaitGroup {

    /** Creates a new WaitGroup instance. */
    constructor($$source: Partial<WaitGroup> = {}) {

        Object.assign(this, $$source);
    }

    /**
     * Creates a new WaitGroup instance from a string or object.
     */
    static createFrom($$source: any = {}): WaitGroup {
        let $$parsedSource = typeof $$source === 'string' ? JSON.parse($$source) : $$source;
        return new WaitGroup($$parsedSource as Partial<WaitGroup>);
    }
}
